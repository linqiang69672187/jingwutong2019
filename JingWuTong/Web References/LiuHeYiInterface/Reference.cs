//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18063 版自动生成。
// 
#pragma warning disable 1591

namespace JingWuTong.LiuHeYiInterface {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CdtOutAccessHttpBinding", Namespace="http://server.xfire.service.oserver.cdt.com")]
    public partial class CdtOutAccess : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback outService1OperationCompleted;
        
        private System.Threading.SendOrPostCallback outServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback outSyncServiceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CdtOutAccess() {
            this.Url = global::JingWuTong.Properties.Settings.Default.JingWuTong_LiuHeYiInterface_CdtOutAccess;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event outService1CompletedEventHandler outService1Completed;
        
        /// <remarks/>
        public event outServiceCompletedEventHandler outServiceCompleted;
        
        /// <remarks/>
        public event outSyncServiceCompletedEventHandler outSyncServiceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.xfire.service.oserver.cdt.com", ResponseNamespace="http://server.xfire.service.oserver.cdt.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outServiceResult", IsNullable=true)]
        public string outService1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string jkid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xlh, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string yhbz, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dwmc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dwjgdm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string yhxm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zdbs, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlDoc) {
            object[] results = this.Invoke("outService1", new object[] {
                        jkid,
                        xlh,
                        yhbz,
                        dwmc,
                        dwjgdm,
                        yhxm,
                        zdbs,
                        xmlDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void outService1Async(string jkid, string xlh, string yhbz, string dwmc, string dwjgdm, string yhxm, string zdbs, string xmlDoc) {
            this.outService1Async(jkid, xlh, yhbz, dwmc, dwjgdm, yhxm, zdbs, xmlDoc, null);
        }
        
        /// <remarks/>
        public void outService1Async(string jkid, string xlh, string yhbz, string dwmc, string dwjgdm, string yhxm, string zdbs, string xmlDoc, object userState) {
            if ((this.outService1OperationCompleted == null)) {
                this.outService1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnoutService1OperationCompleted);
            }
            this.InvokeAsync("outService1", new object[] {
                        jkid,
                        xlh,
                        yhbz,
                        dwmc,
                        dwjgdm,
                        yhxm,
                        zdbs,
                        xmlDoc}, this.outService1OperationCompleted, userState);
        }
        
        private void OnoutService1OperationCompleted(object arg) {
            if ((this.outService1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.outService1Completed(this, new outService1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.xfire.service.oserver.cdt.com", ResponseNamespace="http://server.xfire.service.oserver.cdt.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string outService([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string jkid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xlh, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlDoc) {
            object[] results = this.Invoke("outService", new object[] {
                        jkid,
                        xlh,
                        xmlDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void outServiceAsync(string jkid, string xlh, string xmlDoc) {
            this.outServiceAsync(jkid, xlh, xmlDoc, null);
        }
        
        /// <remarks/>
        public void outServiceAsync(string jkid, string xlh, string xmlDoc, object userState) {
            if ((this.outServiceOperationCompleted == null)) {
                this.outServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoutServiceOperationCompleted);
            }
            this.InvokeAsync("outService", new object[] {
                        jkid,
                        xlh,
                        xmlDoc}, this.outServiceOperationCompleted, userState);
        }
        
        private void OnoutServiceOperationCompleted(object arg) {
            if ((this.outServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.outServiceCompleted(this, new outServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.xfire.service.oserver.cdt.com", ResponseNamespace="http://server.xfire.service.oserver.cdt.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string outSyncService([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string jkurl, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string jkhsm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string jkcs) {
            object[] results = this.Invoke("outSyncService", new object[] {
                        jkurl,
                        jkhsm,
                        jkcs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void outSyncServiceAsync(string jkurl, string jkhsm, string jkcs) {
            this.outSyncServiceAsync(jkurl, jkhsm, jkcs, null);
        }
        
        /// <remarks/>
        public void outSyncServiceAsync(string jkurl, string jkhsm, string jkcs, object userState) {
            if ((this.outSyncServiceOperationCompleted == null)) {
                this.outSyncServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoutSyncServiceOperationCompleted);
            }
            this.InvokeAsync("outSyncService", new object[] {
                        jkurl,
                        jkhsm,
                        jkcs}, this.outSyncServiceOperationCompleted, userState);
        }
        
        private void OnoutSyncServiceOperationCompleted(object arg) {
            if ((this.outSyncServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.outSyncServiceCompleted(this, new outSyncServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void outService1CompletedEventHandler(object sender, outService1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class outService1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal outService1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void outServiceCompletedEventHandler(object sender, outServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class outServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal outServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void outSyncServiceCompletedEventHandler(object sender, outSyncServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class outSyncServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal outSyncServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591